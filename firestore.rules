rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles - users can only access their own
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Warehouses - users can only access their own warehouses
    match /warehouses/{warehouseId} {
      allow read, write: if request.auth != null && 
        (resource.data.ownerId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null && 
        request.resource.data.ownerId == request.auth.uid;
    }
    
    // Inventory - users can only access their own inventory items
    match /inventory/{itemId} {
      allow read, write: if request.auth != null && 
        (resource.data.ownerId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null && 
        request.resource.data.ownerId == request.auth.uid;
    }
    
    // Transactions - users can only access their own transactions
    match /transactions/{transactionId} {
      allow read: if request.auth != null && 
        (resource.data.processedBy == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null && 
        request.resource.data.processedBy == request.auth.uid;
      allow update, delete: if false; // Transactions are immutable
    }
  }
}