{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Mini-Invetory/src/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner, ToasterProps } from \"sonner\"\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      style={\n        {\n          \"--normal-bg\": \"var(--popover)\",\n          \"--normal-text\": \"var(--popover-foreground)\",\n          \"--normal-border\": \"var(--border)\",\n        } as React.CSSProperties\n      }\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,IAAA,4JAAQ;IAErC,qBACE,8OAAC,mJAAM;QACL,OAAO;QACP,WAAU;QACV,OACE;YACE,eAAe;YACf,iBAAiB;YACjB,mBAAmB;QACrB;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Mini-Invetory/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, type FirebaseApp } from \"firebase/app\";\r\nimport { getAuth, type Auth } from \"firebase/auth\";\r\nimport { getFirestore, type Firestore } from \"firebase/firestore\";\r\n\r\ntype FirebaseClients = {\r\n  app: FirebaseApp | null;\r\n  auth: Auth | null;\r\n  firestore: Firestore | null;\r\n};\r\n\r\nfunction readConfig() {\r\n  return {\r\n    apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\r\n    authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\r\n  } as const;\r\n}\r\n\r\nexport function getFirebaseClients(): FirebaseClients {\r\n  const cfg = readConfig();\r\n  if (!cfg.apiKey || !cfg.authDomain || !cfg.projectId || !cfg.appId) {\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n      console.warn(\"Firebase client config missing. Set NEXT_PUBLIC_FIREBASE_* envs.\");\r\n    }\r\n    return { app: null, auth: null, firestore: null };\r\n  }\r\n  const app = getApps().length ? getApps()[0]! : initializeApp(cfg as any);\r\n  const auth = getAuth(app);\r\n  const firestore = getFirestore(app);\r\n  return { app, auth, firestore };\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;;;;AAQA,SAAS;IACP,OAAO;QACL,MAAM;QACN,UAAU;QACV,SAAS;QACT,aAAa;QACb,iBAAiB;QACjB,KAAK;IACP;AACF;AAEO,SAAS;IACd,MAAM,MAAM;IACZ,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,UAAU,IAAI,CAAC,IAAI,SAAS,IAAI,CAAC,IAAI,KAAK,EAAE;QAClE,wCAA2C;YACzC,QAAQ,IAAI,CAAC;QACf;QACA,OAAO;YAAE,KAAK;YAAM,MAAM;YAAM,WAAW;QAAK;IAClD;IACA,MAAM,MAAM,IAAA,2KAAO,IAAG,MAAM,GAAG,IAAA,2KAAO,GAAE,CAAC,EAAE,GAAI,IAAA,iLAAa,EAAC;IAC7D,MAAM,OAAO,IAAA,6KAAO,EAAC;IACrB,MAAM,YAAY,IAAA,iLAAY,EAAC;IAC/B,OAAO;QAAE;QAAK;QAAM;IAAU;AAChC","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Mini-Invetory/src/lib/auth.ts"],"sourcesContent":["import { \r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  sendPasswordResetEmail,\r\n  signOut,\r\n  updateProfile,\r\n  User,\r\n  AuthError\r\n} from \"firebase/auth\";\r\nimport { getFirebaseClients } from \"./firebase\";\r\n\r\nexport interface AuthUser {\r\n  uid: string;\r\n  email: string | null;\r\n  displayName: string | null;\r\n  photoURL: string | null;\r\n}\r\n\r\nexport class AuthService {\r\n  private static instance: AuthService;\r\n  \r\n  static getInstance(): AuthService {\r\n    if (!AuthService.instance) {\r\n      AuthService.instance = new AuthService();\r\n    }\r\n    return AuthService.instance;\r\n  }\r\n\r\n  private getAuth() {\r\n    const { auth } = getFirebaseClients();\r\n    if (!auth) {\r\n      throw new Error(\"Firebase Auth chưa được khởi tạo\");\r\n    }\r\n    return auth;\r\n  }\r\n\r\n  // Đăng ký bằng email/password\r\n  async signUpWithEmail(email: string, password: string, displayName?: string): Promise<AuthUser> {\r\n    try {\r\n      const auth = this.getAuth();\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      \r\n      // Cập nhật tên hiển thị nếu có\r\n      if (displayName && userCredential.user) {\r\n        await updateProfile(userCredential.user, { displayName });\r\n      }\r\n      \r\n      return this.mapFirebaseUser(userCredential.user);\r\n    } catch (error) {\r\n      throw this.handleAuthError(error as AuthError);\r\n    }\r\n  }\r\n\r\n  // Đăng nhập bằng email/password\r\n  async signInWithEmail(email: string, password: string): Promise<AuthUser> {\r\n    try {\r\n      const auth = this.getAuth();\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      return this.mapFirebaseUser(userCredential.user);\r\n    } catch (error) {\r\n      throw this.handleAuthError(error as AuthError);\r\n    }\r\n  }\r\n\r\n  // Đăng nhập bằng Google\r\n  async signInWithGoogle(): Promise<AuthUser> {\r\n    try {\r\n      const auth = this.getAuth();\r\n      const provider = new GoogleAuthProvider();\r\n      provider.addScope('email');\r\n      provider.addScope('profile');\r\n      \r\n      const userCredential = await signInWithPopup(auth, provider);\r\n      return this.mapFirebaseUser(userCredential.user);\r\n    } catch (error) {\r\n      throw this.handleAuthError(error as AuthError);\r\n    }\r\n  }\r\n\r\n  // Gửi email reset password\r\n  async resetPassword(email: string): Promise<void> {\r\n    try {\r\n      const auth = this.getAuth();\r\n      await sendPasswordResetEmail(auth, email);\r\n    } catch (error) {\r\n      throw this.handleAuthError(error as AuthError);\r\n    }\r\n  }\r\n\r\n  // Đăng xuất\r\n  async signOut(): Promise<void> {\r\n    try {\r\n      const auth = this.getAuth();\r\n      await signOut(auth);\r\n    } catch (error) {\r\n      throw this.handleAuthError(error as AuthError);\r\n    }\r\n  }\r\n\r\n  // Lấy user hiện tại\r\n  getCurrentUser(): User | null {\r\n    const auth = this.getAuth();\r\n    return auth.currentUser;\r\n  }\r\n\r\n  // Map Firebase User sang AuthUser\r\n  private mapFirebaseUser(user: User): AuthUser {\r\n    return {\r\n      uid: user.uid,\r\n      email: user.email,\r\n      displayName: user.displayName,\r\n      photoURL: user.photoURL\r\n    };\r\n  }\r\n\r\n  // Xử lý lỗi auth\r\n  private handleAuthError(error: AuthError): Error {\r\n    const errorMessages: Record<string, string> = {\r\n      'auth/user-not-found': 'Không tìm thấy tài khoản với email này',\r\n      'auth/wrong-password': 'Mật khẩu không chính xác',\r\n      'auth/email-already-in-use': 'Email này đã được sử dụng',\r\n      'auth/weak-password': 'Mật khẩu quá yếu',\r\n      'auth/invalid-email': 'Email không hợp lệ',\r\n      'auth/user-disabled': 'Tài khoản đã bị vô hiệu hóa',\r\n      'auth/too-many-requests': 'Quá nhiều yêu cầu, vui lòng thử lại sau',\r\n      'auth/popup-closed-by-user': 'Cửa sổ đăng nhập đã bị đóng',\r\n      'auth/cancelled-popup-request': 'Yêu cầu đăng nhập đã bị hủy'\r\n    };\r\n\r\n    const message = errorMessages[error.code] || error.message || 'Đã xảy ra lỗi không xác định';\r\n    return new Error(message);\r\n  }\r\n}\r\n\r\nexport const authService = AuthService.getInstance();"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Mini-Invetory/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createContext, useContext, useEffect, useState, ReactNode } from \"react\";\r\nimport { onAuthStateChanged, User } from \"firebase/auth\";\r\nimport { getFirebaseClients } from \"@/lib/firebase\";\r\nimport { AuthUser, authService } from \"@/lib/auth\";\r\n\r\ninterface AuthContextType {\r\n  user: AuthUser | null;\r\n  loading: boolean;\r\n  signIn: (email: string, password: string) => Promise<void>;\r\n  signUp: (email: string, password: string, displayName?: string) => Promise<void>;\r\n  signInWithGoogle: () => Promise<void>;\r\n  resetPassword: (email: string) => Promise<void>;\r\n  signOut: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function AuthProvider({ children }: AuthProviderProps) {\r\n  const [user, setUser] = useState<AuthUser | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const { auth } = getFirebaseClients();\r\n    if (!auth) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser: User | null) => {\r\n      if (firebaseUser) {\r\n        const authUser = {\r\n          uid: firebaseUser.uid,\r\n          email: firebaseUser.email,\r\n          displayName: firebaseUser.displayName,\r\n          photoURL: firebaseUser.photoURL\r\n        };\r\n        setUser(authUser);\r\n\r\n        // Tạo session token\r\n        try {\r\n          const idToken = await firebaseUser.getIdToken();\r\n          await fetch('/api/auth/verify', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ idToken }),\r\n          });\r\n        } catch (error) {\r\n          console.error('Error creating session:', error);\r\n        }\r\n      } else {\r\n        setUser(null);\r\n        // Xóa session khi logout\r\n        fetch('/api/auth/logout', { method: 'POST' });\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const signIn = async (email: string, password: string) => {\r\n    await authService.signInWithEmail(email, password);\r\n  };\r\n\r\n  const signUp = async (email: string, password: string, displayName?: string) => {\r\n    await authService.signUpWithEmail(email, password, displayName);\r\n  };\r\n\r\n  const signInWithGoogle = async () => {\r\n    await authService.signInWithGoogle();\r\n  };\r\n\r\n  const resetPassword = async (email: string) => {\r\n    await authService.resetPassword(email);\r\n  };\r\n\r\n  const signOut = async () => {\r\n    await authService.signOut();\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    loading,\r\n    signIn,\r\n    signUp,\r\n    signInWithGoogle,\r\n    resetPassword,\r\n    signOut\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAAA;AACA;AACA;AALA;;;;;;AAiBA,MAAM,4BAAc,IAAA,sNAAa,EAA8B;AAExD,SAAS;IACd,MAAM,UAAU,IAAA,mNAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAMO,SAAS,aAAa,EAAE,QAAQ,EAAqB;IAC1D,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAkB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IAEvC,IAAA,kNAAS,EAAC;QACR,MAAM,EAAE,IAAI,EAAE,GAAG,IAAA,4IAAkB;QACnC,IAAI,CAAC,MAAM;YACT,WAAW;YACX;QACF;QAEA,MAAM,cAAc,IAAA,wLAAkB,EAAC,MAAM,OAAO;YAClD,IAAI,cAAc;gBAChB,MAAM,WAAW;oBACf,KAAK,aAAa,GAAG;oBACrB,OAAO,aAAa,KAAK;oBACzB,aAAa,aAAa,WAAW;oBACrC,UAAU,aAAa,QAAQ;gBACjC;gBACA,QAAQ;gBAER,oBAAoB;gBACpB,IAAI;oBACF,MAAM,UAAU,MAAM,aAAa,UAAU;oBAC7C,MAAM,MAAM,oBAAoB;wBAC9B,QAAQ;wBACR,SAAS;4BAAE,gBAAgB;wBAAmB;wBAC9C,MAAM,KAAK,SAAS,CAAC;4BAAE;wBAAQ;oBACjC;gBACF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,2BAA2B;gBAC3C;YACF,OAAO;gBACL,QAAQ;gBACR,yBAAyB;gBACzB,MAAM,oBAAoB;oBAAE,QAAQ;gBAAO;YAC7C;YACA,WAAW;QACb;QAEA,OAAO,IAAM;IACf,GAAG,EAAE;IAEL,MAAM,SAAS,OAAO,OAAe;QACnC,MAAM,iIAAW,CAAC,eAAe,CAAC,OAAO;IAC3C;IAEA,MAAM,SAAS,OAAO,OAAe,UAAkB;QACrD,MAAM,iIAAW,CAAC,eAAe,CAAC,OAAO,UAAU;IACrD;IAEA,MAAM,mBAAmB;QACvB,MAAM,iIAAW,CAAC,gBAAgB;IACpC;IAEA,MAAM,gBAAgB,OAAO;QAC3B,MAAM,iIAAW,CAAC,aAAa,CAAC;IAClC;IAEA,MAAM,UAAU;QACd,MAAM,iIAAW,CAAC,OAAO;IAC3B;IAEA,MAAM,QAAyB;QAC7B;QACA;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 407, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Mini-Invetory/src/lib/firestore.ts"],"sourcesContent":["// API-based Firestore service (using server-side routes)\r\n\r\nexport interface UserProfile {\r\n  uid: string;\r\n  email: string;\r\n  displayName: string;\r\n  role: 'admin' | 'manager' | 'staff';\r\n  warehouses: string[];\r\n  permissions: {\r\n    canManageInventory: boolean;\r\n    canProcessOrders: boolean;\r\n    canViewReports: boolean;\r\n  };\r\n  isSetupComplete: boolean;\r\n  lastLogin: Date;\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface Warehouse {\r\n  id: string;\r\n  name: string;\r\n  address: string;\r\n  capacity: number;\r\n  currentStock: number;\r\n  totalItems: number;\r\n  managers: string[];\r\n  ownerId: string; // User who created this warehouse\r\n  status: 'active' | 'inactive' | 'maintenance';\r\n  description?: string;\r\n  phone?: string;\r\n  email?: string;\r\n  location?: {\r\n    lat: number;\r\n    lng: number;\r\n  };\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nexport interface InventoryItem {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  sku: string;\r\n  quantity: number;\r\n  minQuantity: number;\r\n  unitPrice: number;\r\n  warehouseId: string;\r\n  ownerId: string; // User who owns this item\r\n  category: string;\r\n  status: 'in_stock' | 'low_stock' | 'out_of_stock';\r\n  supplier?: string;\r\n  location?: string;\r\n  lastUpdated: Date;\r\n  updatedBy: string;\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface Transaction {\r\n  id: string;\r\n  type: 'IN' | 'OUT';\r\n  itemId: string;\r\n  quantity: number;\r\n  timestamp: Date;\r\n  processedBy: string;\r\n  warehouseId: string;\r\n  reason: string;\r\n}\r\n\r\nclass FirestoreService {\r\n  private static instance: FirestoreService;\r\n\r\n  static getInstance(): FirestoreService {\r\n    if (!FirestoreService.instance) {\r\n      FirestoreService.instance = new FirestoreService();\r\n    }\r\n    return FirestoreService.instance;\r\n  }\r\n\r\n  // User Profile Methods\r\n  async getUserProfile(uid: string): Promise<UserProfile | null> {\r\n    try {\r\n      const response = await fetch('/api/user/profile', {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          throw new Error('Unauthorized');\r\n        }\r\n        throw new Error('Failed to get user profile');\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (!data.profile) return null;\r\n\r\n      return {\r\n        ...data.profile,\r\n        lastLogin: data.profile.lastLogin ? new Date(data.profile.lastLogin) : new Date(),\r\n        createdAt: data.profile.createdAt ? new Date(data.profile.createdAt) : new Date(),\r\n      };\r\n    } catch (error) {\r\n      console.error('Error getting user profile:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createUserProfile(profile: Omit<UserProfile, 'createdAt' | 'lastLogin'>): Promise<void> {\r\n    try {\r\n      const response = await fetch('/api/user/profile', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ profile }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to create user profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating user profile:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateUserProfile(uid: string, updates: Partial<UserProfile>): Promise<void> {\r\n    try {\r\n      const response = await fetch('/api/user/profile', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ updates }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update user profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating user profile:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Warehouse Methods\r\n  async createWarehouse(warehouse: Omit<Warehouse, 'id' | 'createdAt'>): Promise<string> {\r\n    try {\r\n      const response = await fetch('/api/warehouses', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ warehouse }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to create warehouse');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data.warehouseId;\r\n    } catch (error) {\r\n      console.error('Error creating warehouse:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getUserWarehouses(): Promise<Warehouse[]> {\r\n    try {\r\n      const response = await fetch('/api/warehouses', {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to get warehouses');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data.warehouses.map((warehouse: any) => ({\r\n        ...warehouse,\r\n        createdAt: warehouse.createdAt ? new Date(warehouse.createdAt) : new Date(),\r\n        updatedAt: warehouse.updatedAt ? new Date(warehouse.updatedAt) : new Date(),\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error getting user warehouses:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getWarehouse(id: string): Promise<Warehouse | null> {\r\n    try {\r\n      const response = await fetch(`/api/warehouses/${id}`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 404) return null;\r\n        throw new Error('Failed to get warehouse');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return {\r\n        ...data.warehouse,\r\n        createdAt: data.warehouse.createdAt ? new Date(data.warehouse.createdAt) : new Date(),\r\n        updatedAt: data.warehouse.updatedAt ? new Date(data.warehouse.updatedAt) : new Date(),\r\n      };\r\n    } catch (error) {\r\n      console.error('Error getting warehouse:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateWarehouse(id: string, updates: Partial<Warehouse>): Promise<void> {\r\n    try {\r\n      const response = await fetch(`/api/warehouses/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ updates }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update warehouse');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating warehouse:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteWarehouse(id: string): Promise<void> {\r\n    try {\r\n      const response = await fetch(`/api/warehouses/${id}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to delete warehouse');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting warehouse:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Inventory Methods\r\n  async getAllInventory(): Promise<InventoryItem[]> {\r\n    try {\r\n      const response = await fetch('/api/inventory', {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to get inventory');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data.items.map((item: any) => ({\r\n        ...item,\r\n        lastUpdated: item.lastUpdated ? new Date(item.lastUpdated) : new Date(),\r\n        createdAt: item.createdAt ? new Date(item.createdAt) : new Date(),\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error getting inventory:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getWarehouseInventory(warehouseId: string): Promise<InventoryItem[]> {\r\n    try {\r\n      const response = await fetch(`/api/inventory?warehouseId=${warehouseId}`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to get warehouse inventory');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data.items.map((item: any) => ({\r\n        ...item,\r\n        lastUpdated: item.lastUpdated ? new Date(item.lastUpdated) : new Date(),\r\n        createdAt: item.createdAt ? new Date(item.createdAt) : new Date(),\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error getting warehouse inventory:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getInventoryItem(id: string): Promise<InventoryItem | null> {\r\n    try {\r\n      const response = await fetch(`/api/inventory/${id}`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 404) return null;\r\n        throw new Error('Failed to get inventory item');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return {\r\n        ...data.item,\r\n        lastUpdated: data.item.lastUpdated ? new Date(data.item.lastUpdated) : new Date(),\r\n        createdAt: data.item.createdAt ? new Date(data.item.createdAt) : new Date(),\r\n      };\r\n    } catch (error) {\r\n      console.error('Error getting inventory item:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async addInventoryItem(item: Omit<InventoryItem, 'id' | 'lastUpdated' | 'createdAt'>): Promise<string> {\r\n    try {\r\n      const response = await fetch('/api/inventory', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ item }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to add inventory item');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data.itemId;\r\n    } catch (error) {\r\n      console.error('Error adding inventory item:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateInventoryItem(id: string, updates: Partial<InventoryItem>): Promise<void> {\r\n    try {\r\n      const response = await fetch(`/api/inventory/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ updates }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update inventory item');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating inventory item:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteInventoryItem(id: string): Promise<void> {\r\n    try {\r\n      const response = await fetch(`/api/inventory/${id}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to delete inventory item');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting inventory item:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Transaction Methods (placeholder - implement later)\r\n  async addTransaction(transaction: Omit<Transaction, 'id' | 'timestamp'>): Promise<string> {\r\n    // TODO: Implement API route for transactions\r\n    return '';\r\n  }\r\n\r\n  async getWarehouseTransactions(warehouseId: string, limit = 50): Promise<Transaction[]> {\r\n    // TODO: Implement API route for transactions\r\n    return [];\r\n  }\r\n}\r\n\r\nexport const firestoreService = FirestoreService.getInstance();"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 716, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Mini-Invetory/src/contexts/UserContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createContext, useContext, useEffect, useState, ReactNode } from \"react\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport { firestoreService, UserProfile } from \"@/lib/firestore\";\r\n\r\ninterface UserContextType {\r\n  userProfile: UserProfile | null;\r\n  loading: boolean;\r\n  refreshProfile: () => Promise<void>;\r\n  updateProfile: (updates: Partial<UserProfile>) => Promise<void>;\r\n}\r\n\r\nconst UserContext = createContext<UserContextType | undefined>(undefined);\r\n\r\nexport function useUser() {\r\n  const context = useContext(UserContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUser must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\ninterface UserProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function UserProvider({ children }: UserProviderProps) {\r\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const { user } = useAuth();\r\n\r\n  const refreshProfile = async () => {\r\n    if (!user) {\r\n      setUserProfile(null);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const profile = await firestoreService.getUserProfile(user.uid);\r\n      setUserProfile(profile);\r\n    } catch (error) {\r\n      console.error('Error fetching user profile:', error);\r\n      setUserProfile(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (updates: Partial<UserProfile>) => {\r\n    if (!user || !userProfile) return;\r\n\r\n    try {\r\n      await firestoreService.updateUserProfile(user.uid, updates);\r\n      setUserProfile({ ...userProfile, ...updates });\r\n    } catch (error) {\r\n      console.error('Error updating user profile:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshProfile();\r\n  }, [user]);\r\n\r\n  const value: UserContextType = {\r\n    userProfile,\r\n    loading,\r\n    refreshProfile,\r\n    updateProfile,\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={value}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n}"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAJA;;;;;AAaA,MAAM,4BAAc,IAAA,sNAAa,EAA8B;AAExD,SAAS;IACd,MAAM,UAAU,IAAA,mNAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAMO,SAAS,aAAa,EAAE,QAAQ,EAAqB;IAC1D,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAqB;IACnE,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,EAAE,IAAI,EAAE,GAAG,IAAA,0IAAO;IAExB,MAAM,iBAAiB;QACrB,IAAI,CAAC,MAAM;YACT,eAAe;YACf,WAAW;YACX;QACF;QAEA,IAAI;YACF,MAAM,UAAU,MAAM,2IAAgB,CAAC,cAAc,CAAC,KAAK,GAAG;YAC9D,eAAe;QACjB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,eAAe;QACjB,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,gBAAgB,OAAO;QAC3B,IAAI,CAAC,QAAQ,CAAC,aAAa;QAE3B,IAAI;YACF,MAAM,2IAAgB,CAAC,iBAAiB,CAAC,KAAK,GAAG,EAAE;YACnD,eAAe;gBAAE,GAAG,WAAW;gBAAE,GAAG,OAAO;YAAC;QAC9C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,MAAM;QACR;IACF;IAEA,IAAA,kNAAS,EAAC;QACR;IACF,GAAG;QAAC;KAAK;IAET,MAAM,QAAyB;QAC7B;QACA;QACA;QACA;IACF;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP","debugId":null}}]
}