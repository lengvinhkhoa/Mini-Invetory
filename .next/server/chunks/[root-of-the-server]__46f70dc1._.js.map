{"version":3,"sources":["turbopack:///[project]/src/lib/firebase-admin.ts","turbopack:///[project]/src/app/api/inventory/route.ts","turbopack:///[project]/node_modules/next/dist/src/build/templates/app-route.ts"],"sourcesContent":["import { initializeApp, getApps, cert, type App } from \"firebase-admin/app\";\r\nimport { getAuth, type Auth } from \"firebase-admin/auth\";\r\n\r\nlet app: App | null = null;\r\n\r\nfunction getFirebaseAdmin(): { app: App; auth: Auth } {\r\n  if (!app) {\r\n    const privateKey = process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, '\\n');\r\n    \r\n    if (!privateKey || !process.env.FIREBASE_CLIENT_EMAIL || !process.env.FIREBASE_PROJECT_ID) {\r\n      throw new Error(\"Missing Firebase Admin SDK configuration\");\r\n    }\r\n\r\n    if (getApps().length === 0) {\r\n      app = initializeApp({\r\n        credential: cert({\r\n          projectId: process.env.FIREBASE_PROJECT_ID,\r\n          clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\r\n          privateKey: privateKey,\r\n        }),\r\n      });\r\n    } else {\r\n      app = getApps()[0]!;\r\n    }\r\n  }\r\n\r\n  return {\r\n    app: app!,\r\n    auth: getAuth(app!)\r\n  };\r\n}\r\n\r\nexport { getFirebaseAdmin };","import { NextRequest, NextResponse } from \"next/server\";\r\nimport { getFirebaseAdmin } from \"@/lib/firebase-admin\";\r\nimport { cookies } from \"next/headers\";\r\n\r\n// GET all inventory or warehouse inventory\r\nexport async function GET(request: NextRequest) {\r\n    try {\r\n        const cookieStore = await cookies();\r\n        const sessionCookie = cookieStore.get(\"auth-token\")?.value;\r\n\r\n        if (!sessionCookie) {\r\n            return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n        }\r\n\r\n        const { auth } = getFirebaseAdmin();\r\n        const decodedClaims = await auth.verifySessionCookie(sessionCookie);\r\n        const uid = decodedClaims.uid;\r\n\r\n        const { searchParams } = new URL(request.url);\r\n        const warehouseId = searchParams.get('warehouseId');\r\n\r\n        const admin = await import(\"firebase-admin/firestore\");\r\n        const db = admin.getFirestore();\r\n\r\n        // Get user profile to check permissions\r\n        const userDoc = await db.collection(\"users\").doc(uid).get();\r\n        const userData = userDoc.data();\r\n\r\n        if (!userData?.permissions?.canManageInventory && userData?.role !== 'admin') {\r\n            return NextResponse.json({ error: \"Insufficient permissions\" }, { status: 403 });\r\n        }\r\n\r\n        let inventoryQuery: any = db.collection(\"inventory\");\r\n\r\n        // Admin can see all inventory, others only their own\r\n        if (userData?.role !== 'admin') {\r\n            inventoryQuery = inventoryQuery.where(\"ownerId\", \"==\", uid);\r\n        }\r\n\r\n        // Filter by warehouse if specified\r\n        if (warehouseId) {\r\n            inventoryQuery = inventoryQuery.where(\"warehouseId\", \"==\", warehouseId);\r\n        }\r\n\r\n        const inventorySnapshot = await inventoryQuery.get();\r\n\r\n        const items = inventorySnapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n            lastUpdated: doc.data().lastUpdated?.toDate?.()?.toISOString(),\r\n            createdAt: doc.data().createdAt?.toDate?.()?.toISOString(),\r\n        }));\r\n\r\n        return NextResponse.json({ items });\r\n    } catch (error) {\r\n        console.error(\"Error getting inventory:\", error);\r\n        return NextResponse.json(\r\n            { error: \"Internal server error\" },\r\n            { status: 500 }\r\n        );\r\n    }\r\n}\r\n\r\n// POST create inventory item\r\nexport async function POST(request: NextRequest) {\r\n    try {\r\n        const cookieStore = await cookies();\r\n        const sessionCookie = cookieStore.get(\"auth-token\")?.value;\r\n\r\n        if (!sessionCookie) {\r\n            return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n        }\r\n\r\n        const { auth } = getFirebaseAdmin();\r\n        const decodedClaims = await auth.verifySessionCookie(sessionCookie);\r\n        const uid = decodedClaims.uid;\r\n\r\n        const body = await request.json();\r\n        const { item } = body;\r\n\r\n        const admin = await import(\"firebase-admin/firestore\");\r\n        const db = admin.getFirestore();\r\n\r\n        // Check permissions\r\n        const userDoc = await db.collection(\"users\").doc(uid).get();\r\n        const userData = userDoc.data();\r\n\r\n        if (!userData?.permissions?.canManageInventory && userData?.role !== 'admin') {\r\n            return NextResponse.json({ error: \"Insufficient permissions\" }, { status: 403 });\r\n        }\r\n\r\n        // Verify warehouse ownership for non-admin users\r\n        if (userData?.role !== 'admin') {\r\n            const warehouseDoc = await db.collection(\"warehouses\").doc(item.warehouseId).get();\r\n            const warehouseData = warehouseDoc.data();\r\n            \r\n            if (!warehouseDoc.exists || warehouseData?.ownerId !== uid) {\r\n                return NextResponse.json({ error: \"Access denied to warehouse\" }, { status: 403 });\r\n            }\r\n        }\r\n\r\n        // Determine status based on quantity\r\n        let status = 'in_stock';\r\n        if (item.quantity === 0) {\r\n            status = 'out_of_stock';\r\n        } else if (item.quantity <= item.minQuantity) {\r\n            status = 'low_stock';\r\n        }\r\n\r\n        const itemData = {\r\n            ...item,\r\n            ownerId: uid, // Set owner to current user\r\n            status,\r\n            updatedBy: uid,\r\n            createdAt: admin.FieldValue.serverTimestamp(),\r\n            lastUpdated: admin.FieldValue.serverTimestamp(),\r\n        };\r\n\r\n        const docRef = await db.collection(\"inventory\").add(itemData);\r\n\r\n        return NextResponse.json({\r\n            itemId: docRef.id,\r\n            item: { id: docRef.id, ...itemData }\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error creating inventory item:\", error);\r\n        return NextResponse.json(\r\n            { error: \"Internal server error\" },\r\n            { status: 500 }\r\n        );\r\n    }\r\n}","import {\n  AppRouteRouteModule,\n  type AppRouteRouteHandlerContext,\n  type AppRouteRouteModuleOptions,\n} from '../../server/route-modules/app-route/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { patchFetch as _patchFetch } from '../../server/lib/patch-fetch'\nimport type { IncomingMessage, ServerResponse } from 'node:http'\nimport { getRequestMeta } from '../../server/request-meta'\nimport { getTracer, type Span, SpanKind } from '../../server/lib/trace/tracer'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { NodeNextRequest, NodeNextResponse } from '../../server/base-http/node'\nimport {\n  NextRequestAdapter,\n  signalFromNodeResponse,\n} from '../../server/web/spec-extension/adapters/next-request'\nimport { BaseServerSpan } from '../../server/lib/trace/constants'\nimport { getRevalidateReason } from '../../server/instrumentation/utils'\nimport { sendResponse } from '../../server/send-response'\nimport {\n  fromNodeOutgoingHttpHeaders,\n  toNodeOutgoingHttpHeaders,\n} from '../../server/web/utils'\nimport { getCacheControlHeader } from '../../server/lib/cache-control'\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from '../../lib/constants'\nimport { NoFallbackError } from '../../shared/lib/no-fallback-error.external'\nimport {\n  CachedRouteKind,\n  type ResponseCacheEntry,\n  type ResponseGenerator,\n} from '../../server/response-cache'\n\nimport * as userland from 'VAR_USERLAND'\n\n// These are injected by the loader afterwards. This is injected as a variable\n// instead of a replacement because this could also be `undefined` instead of\n// an empty string.\ndeclare const nextConfigOutput: AppRouteRouteModuleOptions['nextConfigOutput']\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\n// INJECT:nextConfigOutput\n\nconst routeModule = new AppRouteRouteModule({\n  definition: {\n    kind: RouteKind.APP_ROUTE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    filename: 'VAR_DEFINITION_FILENAME',\n    bundlePath: 'VAR_DEFINITION_BUNDLE_PATH',\n  },\n  distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n  relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n  resolvedPagePath: 'VAR_RESOLVED_PAGE_PATH',\n  nextConfigOutput,\n  userland,\n})\n\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule\n\nfunction patchFetch() {\n  return _patchFetch({\n    workAsyncStorage,\n    workUnitAsyncStorage,\n  })\n}\n\nexport {\n  routeModule,\n  workAsyncStorage,\n  workUnitAsyncStorage,\n  serverHooks,\n  patchFetch,\n}\n\nexport async function handler(\n  req: IncomingMessage,\n  res: ServerResponse,\n  ctx: {\n    waitUntil: (prom: Promise<void>) => void\n  }\n) {\n  let srcPage = 'VAR_DEFINITION_PAGE'\n\n  // turbopack doesn't normalize `/index` in the page name\n  // so we need to to process dynamic routes properly\n  // TODO: fix turbopack providing differing value from webpack\n  if (process.env.TURBOPACK) {\n    srcPage = srcPage.replace(/\\/index$/, '') || '/'\n  } else if (srcPage === '/index') {\n    // we always normalize /index specifically\n    srcPage = '/'\n  }\n  const multiZoneDraftMode = process.env\n    .__NEXT_MULTI_ZONE_DRAFT_MODE as any as boolean\n\n  const prepareResult = await routeModule.prepare(req, res, {\n    srcPage,\n    multiZoneDraftMode,\n  })\n\n  if (!prepareResult) {\n    res.statusCode = 400\n    res.end('Bad Request')\n    ctx.waitUntil?.(Promise.resolve())\n    return null\n  }\n\n  const {\n    buildId,\n    params,\n    nextConfig,\n    isDraftMode,\n    prerenderManifest,\n    routerServerContext,\n    isOnDemandRevalidate,\n    revalidateOnlyGenerated,\n    resolvedPathname,\n  } = prepareResult\n\n  const normalizedSrcPage = normalizeAppPath(srcPage)\n\n  let isIsr = Boolean(\n    prerenderManifest.dynamicRoutes[normalizedSrcPage] ||\n      prerenderManifest.routes[resolvedPathname]\n  )\n\n  if (isIsr && !isDraftMode) {\n    const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname])\n    const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage]\n\n    if (prerenderInfo) {\n      if (prerenderInfo.fallback === false && !isPrerendered) {\n        throw new NoFallbackError()\n      }\n    }\n  }\n\n  let cacheKey: string | null = null\n\n  if (isIsr && !routeModule.isDev && !isDraftMode) {\n    cacheKey = resolvedPathname\n    // ensure /index and / is normalized to one key\n    cacheKey = cacheKey === '/index' ? '/' : cacheKey\n  }\n\n  const supportsDynamicResponse: boolean =\n    // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true ||\n    // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr\n\n  // This is a revalidation request if the request is for a static\n  // page and it is not being resumed from a postponed render and\n  // it is not a dynamic RSC request then it is a revalidation\n  // request.\n  const isRevalidate = isIsr && !supportsDynamicResponse\n\n  const method = req.method || 'GET'\n  const tracer = getTracer()\n  const activeSpan = tracer.getActiveScopeSpan()\n\n  const context: AppRouteRouteHandlerContext = {\n    params,\n    prerenderManifest,\n    renderOpts: {\n      experimental: {\n        cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n        authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n      },\n      supportsDynamicResponse,\n      incrementalCache: getRequestMeta(req, 'incrementalCache'),\n      cacheLifeProfiles: nextConfig.experimental?.cacheLife,\n      isRevalidate,\n      waitUntil: ctx.waitUntil,\n      onClose: (cb) => {\n        res.on('close', cb)\n      },\n      onAfterTaskError: undefined,\n      onInstrumentationRequestError: (error, _request, errorContext) =>\n        routeModule.onRequestError(\n          req,\n          error,\n          errorContext,\n          routerServerContext\n        ),\n    },\n    sharedContext: {\n      buildId,\n    },\n  }\n  const nodeNextReq = new NodeNextRequest(req)\n  const nodeNextRes = new NodeNextResponse(res)\n\n  const nextReq = NextRequestAdapter.fromNodeNextRequest(\n    nodeNextReq,\n    signalFromNodeResponse(res)\n  )\n\n  try {\n    const invokeRouteModule = async (span?: Span) => {\n      return routeModule.handle(nextReq, context).finally(() => {\n        if (!span) return\n\n        span.setAttributes({\n          'http.status_code': res.statusCode,\n          'next.rsc': false,\n        })\n\n        const rootSpanAttributes = tracer.getRootSpanAttributes()\n        // We were unable to get attributes, probably OTEL is not enabled\n        if (!rootSpanAttributes) {\n          return\n        }\n\n        if (\n          rootSpanAttributes.get('next.span_type') !==\n          BaseServerSpan.handleRequest\n        ) {\n          console.warn(\n            `Unexpected root span type '${rootSpanAttributes.get(\n              'next.span_type'\n            )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n          )\n          return\n        }\n\n        const route = rootSpanAttributes.get('next.route')\n        if (route) {\n          const name = `${method} ${route}`\n\n          span.setAttributes({\n            'next.route': route,\n            'http.route': route,\n            'next.span_name': name,\n          })\n          span.updateName(name)\n        } else {\n          span.updateName(`${method} ${req.url}`)\n        }\n      })\n    }\n\n    const handleResponse = async (currentSpan?: Span) => {\n      const responseGenerator: ResponseGenerator = async ({\n        previousCacheEntry,\n      }) => {\n        try {\n          if (\n            !getRequestMeta(req, 'minimalMode') &&\n            isOnDemandRevalidate &&\n            revalidateOnlyGenerated &&\n            !previousCacheEntry\n          ) {\n            res.statusCode = 404\n            // on-demand revalidate always sets this header\n            res.setHeader('x-nextjs-cache', 'REVALIDATED')\n            res.end('This page could not be found')\n            return null\n          }\n\n          const response = await invokeRouteModule(currentSpan)\n\n          ;(req as any).fetchMetrics = (context.renderOpts as any).fetchMetrics\n          let pendingWaitUntil = context.renderOpts.pendingWaitUntil\n\n          // Attempt using provided waitUntil if available\n          // if it's not we fallback to sendResponse's handling\n          if (pendingWaitUntil) {\n            if (ctx.waitUntil) {\n              ctx.waitUntil(pendingWaitUntil)\n              pendingWaitUntil = undefined\n            }\n          }\n          const cacheTags = context.renderOpts.collectedTags\n\n          // If the request is for a static response, we can cache it so long\n          // as it's not edge.\n          if (isIsr) {\n            const blob = await response.blob()\n\n            // Copy the headers from the response.\n            const headers = toNodeOutgoingHttpHeaders(response.headers)\n\n            if (cacheTags) {\n              headers[NEXT_CACHE_TAGS_HEADER] = cacheTags\n            }\n\n            if (!headers['content-type'] && blob.type) {\n              headers['content-type'] = blob.type\n            }\n\n            const revalidate =\n              typeof context.renderOpts.collectedRevalidate === 'undefined' ||\n              context.renderOpts.collectedRevalidate >= INFINITE_CACHE\n                ? false\n                : context.renderOpts.collectedRevalidate\n\n            const expire =\n              typeof context.renderOpts.collectedExpire === 'undefined' ||\n              context.renderOpts.collectedExpire >= INFINITE_CACHE\n                ? undefined\n                : context.renderOpts.collectedExpire\n\n            // Create the cache entry for the response.\n            const cacheEntry: ResponseCacheEntry = {\n              value: {\n                kind: CachedRouteKind.APP_ROUTE,\n                status: response.status,\n                body: Buffer.from(await blob.arrayBuffer()),\n                headers,\n              },\n              cacheControl: { revalidate, expire },\n            }\n\n            return cacheEntry\n          } else {\n            // send response without caching if not ISR\n            await sendResponse(\n              nodeNextReq,\n              nodeNextRes,\n              response,\n              context.renderOpts.pendingWaitUntil\n            )\n            return null\n          }\n        } catch (err) {\n          // if this is a background revalidate we need to report\n          // the request error here as it won't be bubbled\n          if (previousCacheEntry?.isStale) {\n            await routeModule.onRequestError(\n              req,\n              err,\n              {\n                routerKind: 'App Router',\n                routePath: srcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                  isRevalidate,\n                  isOnDemandRevalidate,\n                }),\n              },\n              routerServerContext\n            )\n          }\n          throw err\n        }\n      }\n\n      const cacheEntry = await routeModule.handleResponse({\n        req,\n        nextConfig,\n        cacheKey,\n        routeKind: RouteKind.APP_ROUTE,\n        isFallback: false,\n        prerenderManifest,\n        isRoutePPREnabled: false,\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated,\n        responseGenerator,\n        waitUntil: ctx.waitUntil,\n      })\n\n      // we don't create a cacheEntry for ISR\n      if (!isIsr) {\n        return null\n      }\n\n      if (cacheEntry?.value?.kind !== CachedRouteKind.APP_ROUTE) {\n        throw new Error(\n          `Invariant: app-route received invalid cache entry ${cacheEntry?.value?.kind}`\n        )\n      }\n\n      if (!getRequestMeta(req, 'minimalMode')) {\n        res.setHeader(\n          'x-nextjs-cache',\n          isOnDemandRevalidate\n            ? 'REVALIDATED'\n            : cacheEntry.isMiss\n              ? 'MISS'\n              : cacheEntry.isStale\n                ? 'STALE'\n                : 'HIT'\n        )\n      }\n\n      // Draft mode should never be cached\n      if (isDraftMode) {\n        res.setHeader(\n          'Cache-Control',\n          'private, no-cache, no-store, max-age=0, must-revalidate'\n        )\n      }\n\n      const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers)\n\n      if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n        headers.delete(NEXT_CACHE_TAGS_HEADER)\n      }\n\n      // If cache control is already set on the response we don't\n      // override it to allow users to customize it via next.config\n      if (\n        cacheEntry.cacheControl &&\n        !res.getHeader('Cache-Control') &&\n        !headers.get('Cache-Control')\n      ) {\n        headers.set(\n          'Cache-Control',\n          getCacheControlHeader(cacheEntry.cacheControl)\n        )\n      }\n\n      await sendResponse(\n        nodeNextReq,\n        nodeNextRes,\n        new Response(cacheEntry.value.body, {\n          headers,\n          status: cacheEntry.value.status || 200,\n        })\n      )\n      return null\n    }\n\n    // TODO: activeSpan code path is for when wrapped by\n    // next-server can be removed when this is no longer used\n    if (activeSpan) {\n      await handleResponse(activeSpan)\n    } else {\n      await tracer.withPropagatedContext(req.headers, () =>\n        tracer.trace(\n          BaseServerSpan.handleRequest,\n          {\n            spanName: `${method} ${req.url}`,\n            kind: SpanKind.SERVER,\n            attributes: {\n              'http.method': method,\n              'http.target': req.url,\n            },\n          },\n          handleResponse\n        )\n      )\n    }\n  } catch (err) {\n    // if we aren't wrapped by base-server handle here\n    if (!activeSpan && !(err instanceof NoFallbackError)) {\n      await routeModule.onRequestError(req, err, {\n        routerKind: 'App Router',\n        routePath: normalizedSrcPage,\n        routeType: 'route',\n        revalidateReason: getRevalidateReason({\n          isRevalidate,\n          isOnDemandRevalidate,\n        }),\n      })\n    }\n\n    // rethrow so that we can handle serving error page\n\n    // If this is during static generation, throw the error again.\n    if (isIsr) throw err\n\n    // Otherwise, send a 500 response.\n    await sendResponse(\n      nodeNextReq,\n      nodeNextRes,\n      new Response(null, { status: 500 })\n    )\n    return null\n  }\n}\n"],"names":["AppRouteRouteModule","RouteKind","patchFetch","_patchFetch","getRequestMeta","getTracer","SpanKind","normalizeAppPath","NodeNextRequest","NodeNextResponse","NextRequestAdapter","signalFromNodeResponse","BaseServerSpan","getRevalidateReason","sendResponse","fromNodeOutgoingHttpHeaders","toNodeOutgoingHttpHeaders","getCacheControlHeader","INFINITE_CACHE","NEXT_CACHE_TAGS_HEADER","NoFallbackError","CachedRouteKind","userland","routeModule","definition","kind","APP_ROUTE","page","pathname","filename","bundlePath","distDir","process","env","__NEXT_RELATIVE_DIST_DIR","relativeProjectDir","__NEXT_RELATIVE_PROJECT_DIR","resolvedPagePath","nextConfigOutput","workAsyncStorage","workUnitAsyncStorage","serverHooks","handler","req","res","ctx","nextConfig","srcPage","TURBOPACK","replace","multiZoneDraftMode","__NEXT_MULTI_ZONE_DRAFT_MODE","prepareResult","prepare","statusCode","end","waitUntil","Promise","resolve","buildId","params","isDraftMode","prerenderManifest","routerServerContext","isOnDemandRevalidate","revalidateOnlyGenerated","resolvedPathname","normalizedSrcPage","isIsr","Boolean","dynamicRoutes","routes","isPrerendered","prerenderInfo","fallback","cacheKey","isDev","supportsDynamicResponse","isRevalidate","method","tracer","activeSpan","getActiveScopeSpan","context","renderOpts","experimental","cacheComponents","authInterrupts","incrementalCache","cacheLifeProfiles","cacheLife","onClose","cb","on","onAfterTaskError","undefined","onInstrumentationRequestError","error","_request","errorContext","onRequestError","sharedContext","nodeNextReq","nodeNextRes","nextReq","fromNodeNextRequest","invokeRouteModule","span","handle","finally","setAttributes","rootSpanAttributes","getRootSpanAttributes","get","handleRequest","console","warn","route","name","updateName","url","handleResponse","currentSpan","cacheEntry","responseGenerator","previousCacheEntry","setHeader","response","fetchMetrics","pendingWaitUntil","cacheTags","collectedTags","blob","headers","type","revalidate","collectedRevalidate","expire","collectedExpire","value","status","body","Buffer","from","arrayBuffer","cacheControl","err","isStale","routerKind","routePath","routeType","revalidateReason","routeKind","isFallback","isRoutePPREnabled","Error","isMiss","delete","getHeader","set","Response","withPropagatedContext","trace","spanName","SERVER","attributes"],"mappings":"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","ignoreList":[2]}